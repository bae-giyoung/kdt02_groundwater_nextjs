[회원가입/로그인/마이페이지 REST API 명세서]
= 전체 개발 환경: 각기 다른 컴퓨터(오리진)의 각기 다른 서버 =
1. 프론트 Next.js 서버
2. 백엔드 Spring boot 서버

= REST API =
- 이슈: 클라이언트에서 -> 다른 오리진의 BE 엔드포인트로 요청.

1. 회원가입 (Register)
- Method: POST
- URL: /api/v1/auth/register
- Request Headers:
Content-Type: application/json
Accept: application/json
- Request Body:
{ "username": "홍길동", "email": "a@naver.com", "password": "abc" }
- Response:
--- 201 Created: { "username": "홍길동" }
--- 400 Bad Request (검증 실패 예): { "code": 400, "message": "email: must be a well-formed email address" }
--- 409 Conflict (중복 아이디/이메일): { "code": 409, "message": "중복 아이디/이메일" }
--- 500 Internal Server Error: { "code": 500, "message": "내부 서버 오류" }



2. 로그인 (Login) (세션 방식)
- Method: POST
- URL: /api/v1/auth/login
- Request Headers: 
Content-Type: application/json
Accept: application/json
- Request Body:
{ "username": "a@naver.com", "password": "abc" }
- Response: 
--- 200 OK (서버가 자동으로 Set-Cookie: JSESSIONID=...; HttpOnly; ... 전송):
{
  "user": {
    "username": "a@naver.com",
    "roles": "USER"         // 복수 권한이면 "USER,ADMIN" (문자열)
  },
  "sessionExpiresIn": 1800   // 초(30분)
}

--- 401 Unauthorized (자격증명 오류):
{ "code": 401, "message": "이메일 또는 비밀번호가 올바르지 않습니다." }

--- 500 Internal Server Error:
{ "code": 500, "message": "서버 오류가 발생했습니다." }
* 프론트는 반드시 credentials: 'include' 로 호출해야 브라우저가 JSESSIONID를 저장합니다.



3. 로그아웃(Logout)
- POST /api/v1/auth/logout
- Request Body: 없음
- Response:
--- 200 OK:
{ "message": "logged out" }

--- 500 Internal Server Error:
{ "code": 500, "message": "내부 서버 오류" }



4. 내정보(me)
- GET /api/v1/auth/me
Response:
--- 200 OK:
{ "username": "a@naver.com" }

--- 401 Unauthorized
{ "code": 401, "message": "인증 필요" }
